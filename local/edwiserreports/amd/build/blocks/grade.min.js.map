{"version":3,"sources":["blocks/grade.js"],"names":["define","$","ModalFactory","ModalEvents","Templates","ApexCharts","common","CFG","EdwiserReportsEvents","blockName","chart","filter","cohort","course","group","student","SELECTOR","PANEL","COHORT","COURSE","GROUP","STUDENT","GRAPH","GRAPHLABEL","FORMFILTER","FILTERS","position","ranges","pieChartDefault","plotOptions","pie","expandOnClick","id","type","height","events","fill","legend","formatter","seriesName","opts","w","globals","series","seriesIndex","colors","getColorTheme","dataLabels","enabled","noData","text","M","util","get_string","PROMISE","GET_GRAPH_DATA","ajax","url","requestUrl","requestType","dataType","requestDataType","data","action","secret","local_edwiserreports","lang","attr","JSON","stringify","GET_TABLE_DATA","range","renderGraph","graph","destroy","get","render","setTimeout","loader","hide","loadGraph","show","find","val","done","response","Object","assign","labels","length","reverse","grades","header","responseTitle","tooltip","custom","_ref","dataPointIndex","value","single","plural","label","config","color","concat","updated","mounted","prepend","dataPointSelection","event","chartContext","title","rangeSplit","split","create","body","then","modal","modalRoot","getRoot","addClass","on","hidden","html","js","replaceNodeContents","getBody","fail","Notification","exception","insight","toPrecision","average","reloadFilter","types","init","invalidUser","select2","parseInt","this","document","EXPORTGRAPHPDF","graphElement","exportGraphPDF","width","EXPORTGRAPHJPEG","exportGraphJPEG","EXPORTGRAPHPNG","exportGraphPNG","EXPORTGRAPHSVG","exportGraphSVG","setInterval","newPosition","updateOptions","handleFilterSize","download","format","filename","animations"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Grade table js.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @author      Yogesh Shirsath\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine('local_edwiserreports/blocks/grade', [\n    'jquery',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/templates',\n    'local_edwiserreports/vendor/apexcharts',\n    'local_edwiserreports/common',\n    'local_edwiserreports/defaultconfig',\n    'local_edwiserreports/events',\n    'local_edwiserreports/select2'\n], function(\n    $,\n    ModalFactory,\n    ModalEvents,\n    Templates,\n    ApexCharts,\n    common,\n    CFG,\n    EdwiserReportsEvents\n) {\n\n    let blockName = 'gradeblock';\n\n    /**\n     * Chart.\n     */\n    var chart = null;\n\n    /**\n     * Filter for ajax.\n     */\n    var filter = {\n        cohort: 0,\n        course: 0,\n        group: 0,\n        student: 0\n    };\n\n    /**\n     * Selectors list.\n     */\n    var SELECTOR = {\n        PANEL: '#gradeblock',\n        COHORT: '.cohort-select',\n        COURSE: '.course-select',\n        GROUP: '.group-select',\n        STUDENT: '.student-select',\n        GRAPH: '.graph',\n        GRAPHLABEL: '.graph-label',\n        FORMFILTER: '.download-links [name=\"filter\"]',\n        FILTERS: '.filters'\n    };\n\n    /**\n     * Legend position.\n     */\n    var position = 'right';\n\n    /**\n     * Ranges\n     */\n    var ranges = [\"81to100\", \"61to80\", \"41to60\", \"21to40\", \"0to20\"];\n\n    /**\n     * Pie chart default config.\n     */\n    const pieChartDefault = {\n        plotOptions: {\n            pie: {\n                expandOnClick: false\n            }\n        },\n        chart: {\n            id: 'grade',\n            type: 'donut',\n            height: 350,\n            events: {}\n        },\n        fill: {\n            type: 'solid',\n        },\n        legend: {\n            position: position,\n            formatter: function(seriesName, opts) {\n                return [seriesName + \": \" + opts.w.globals.series[opts.seriesIndex]]\n            }\n        },\n        colors: CFG.getColorTheme(),\n        dataLabels: {\n            enabled: false\n        },\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * All promises.\n     */\n    var PROMISE = {\n        /**\n         * Get graph data using filters.\n         * @returns {PROMISE}\n         */\n        GET_GRAPH_DATA: function() {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_grade_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        },\n\n        /**\n         * Get table data for popup modal based on filters and range\n         * @param   {string}  range Grade range\n         * @returns {PROMISE}\n         */\n        GET_TABLE_DATA: function(range) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_grade_modal_data',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify({\n                        filter: filter,\n                        range: range\n                    })\n                }\n            });\n        }\n    };\n\n    /**\n     * Create Grade Table.\n     * @param {string} range Grade range.\n     * @param {string} title Modal title.\n     */\n    function createGradeTable(range, title) {\n        let rangeSplit = ranges[range].split('to');\n        ModalFactory.create({\n            body: `<label class=\"text-center w-100 py-2\">\n                    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n                </label>`,\n            title: `${title} (${rangeSplit[0]}% - ${rangeSplit[1]}%)`\n        }).then(function(modal) {\n            let modalRoot = modal.getRoot();\n            modalRoot.find('.modal-dialog').addClass('modal-lg');\n            modal.show();\n            modalRoot.on(ModalEvents.hidden, function() {\n                modal.destroy();\n            });\n\n            // Get data for modal table.\n            PROMISE.GET_TABLE_DATA(ranges[range])\n                .done(function(response) {\n                    Templates.render('local_edwiserreports/modal_table', response)\n                        .done(function(html, js) {\n                            Templates.replaceNodeContents(modal.getBody(), html, js);\n                        })\n                        .fail(Notification.exception);\n                });\n        }).fail(Notification.exception);\n    }\n\n    /**\n     * Render graph.\n     * @param {DOM} graph Graph element\n     * @param {Object} data Graph data\n     */\n    function renderGraph(graph, data) {\n        if (chart !== null) {\n            chart.destroy();\n        }\n        chart = new ApexCharts(graph.get(0), data);\n        chart.render();\n        setTimeout(function() {\n            common.loader.hide(SELECTOR.PANEL);\n        }, 1000);\n    }\n\n    /**\n     * Load graph\n     */\n    function loadGraph() {\n        let data;\n        common.loader.show(SELECTOR.PANEL);\n\n        // Set export filter to download link.\n        $(SELECTOR.PANEL).find(SELECTOR.FORMFILTER).val(JSON.stringify(filter));\n\n        PROMISE.GET_GRAPH_DATA()\n            .done(function(response) {\n                data = Object.assign({}, pieChartDefault);\n                data.legend.position = position;\n                if (response.labels.length != 0) {\n                    data.labels = response.labels.reverse();\n                    data.series = response.grades.reverse();\n                } else {\n                    data.labels = [];\n                    data.series = [];\n                }\n                $(SELECTOR.PANEL).find(SELECTOR.GRAPH).data(\n                    'responseTitle',\n                    M.util.get_string(response.header, 'local_edwiserreports')\n                );\n                data.responseTitle = M.util.get_string(response.header, 'local_edwiserreports');\n                data.tooltip = {\n                    custom: function({ series, seriesIndex, dataPointIndex, w }) {\n                        let value = series[seriesIndex];\n                        let tooltip = value < 2 ? response.tooltip.single : response.tooltip.plural;\n                        let label = w.config.labels[seriesIndex];\n                        let color = w.config.colors[seriesIndex];\n                        return `<div class=\"custom-donut-tooltip\" style=\"text-align:center\">\n                                <div style=\"color: ${color};\">\n                                    <span style=\"font-weight: 500;\"> ${label}:</span>\n                                    <span style=\"font-weight: 700;\"> ${value} ${M.util.get_string(tooltip, 'local_edwiserreports')}</span>\n                                </div>\n                                <span style=\"color: black; font-size: 0.871rem;\">${M.util.get_string('clickonchartformoreinfo', 'local_edwiserreports')}</span>\n                            </div>`;\n                    }\n                };\n                data.chart.events.updated = data.chart.events.mounted = function() {\n                    if (response.labels.length != 0) {\n                        $(SELECTOR.PANEL).find(SELECTOR.GRAPH).find('.apexcharts-legend')\n                            .prepend(`\n                                <label class=\"graph-label w-100 text-center\">\n                                    ${$(SELECTOR.PANEL).find(SELECTOR.GRAPH).data('responseTitle')}\n                                </label>\n                            `);\n                    }\n                };\n                data.chart.events.dataPointSelection = function(event, chartContext, config) {\n                    createGradeTable(config.dataPointIndex, $(SELECTOR.PANEL).find(SELECTOR.GRAPH).data('responseTitle'));\n                };\n                common.insight('#gradeblock .insight', {\n                    'insight': {\n                        'value': common.toPrecision(response.average, 2) + '%',\n                        'title': 'averagegrade'\n                    }\n                });\n                renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n            });\n    }\n\n    /**\n     * Reload filters.\n     */\n    function reloadFilter(types) {\n        common.loader.show(SELECTOR.PANEL);\n        common.reloadFilter(\n            SELECTOR.PANEL,\n            types,\n            filter.cohort,\n            filter.course,\n            filter.group,\n            function() {\n                loadGraph();\n            });\n    }\n\n    /**\n     * Initialize event listeners.\n     */\n    function initEvents() {\n\n        // Cohort selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.COHORT}`, function() {\n            filter.cohort = parseInt($(this).val());\n            filter.course = 0;\n            filter.group = 0;\n            filter.student = 0;\n            reloadFilter(['course', 'group', 'student']);\n        });\n\n        // Course selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.COURSE}`, function() {\n            filter.course = parseInt($(this).val());\n            filter.group = 0;\n            filter.student = 0;\n            reloadFilter(['group', 'student']);\n\n        });\n\n        // Group selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.GROUP}`, function() {\n            filter.group = parseInt($(this).val());\n            filter.student = 0;\n            reloadFilter(['student']);\n        });\n\n        // Student selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.STUDENT}`, function() {\n            filter.student = parseInt($(this).val());\n            // Load graph data.\n            loadGraph();\n        });\n\n        // Export to PDF.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHPDF + '-' + blockName, function() {\n            let graphElement = $(SELECTOR.PANEL).find(SELECTOR.GRAPH);\n            common.exportGraphPDF(chart, filter, graphElement.width(), graphElement.height());\n        });\n\n        // Export to JPEG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHJPEG + '-' + blockName, function() {\n            common.exportGraphJPEG(chart, filter);\n        });\n\n        // Export to PNG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHPNG + '-' + blockName, function() {\n            common.exportGraphPNG(chart, filter);\n        });\n\n        // Export to SVG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHSVG + '-' + blockName, function() {\n            common.exportGraphSVG(chart, filter);\n        });\n\n        // Handling legend position based on width.\n        setInterval(function() {\n            if (chart === null) {\n                return;\n            }\n            let width = $(SELECTOR.PANEL).find(SELECTOR.GRAPH).width();\n            var attr = $('html').attr('dir');\n            let newPosition = width >= 400 ? 'right' : 'bottom';\n            if (attr == 'rtl') {\n                newPosition = width >= 400 ? 'left' : 'bottom';\n            }\n            if (newPosition == position) {\n                return;\n            }\n            position = newPosition;\n            chart.updateOptions({\n                legend: {\n                    position: position\n                }\n            })\n        }, 1000);\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n        if ($(SELECTOR.PANEL).length == 0) {\n            return;\n        }\n        $(SELECTOR.PANEL).find('.singleselect').select2();\n        initEvents();\n        common.handleFilterSize(SELECTOR.PANEL);\n        loadGraph();\n    }\n\n    /**\n     * Download grade block's graph in specified format.\n     *\n     * @param {String} format   Format of downloading file\n     * @param {String} filename Name of file\n     * @param {String} data     Exported data\n     */\n    function download(format, filename, response) {\n        data = Object.assign({}, pieChartDefault);\n        data.legend.position = position;\n        if (response.labels.length != 0) {\n            data.labels = response.labels.reverse();\n            data.series = response.grades.reverse();\n        } else {\n            data.labels = [];\n            data.series = [];\n        }\n        $(SELECTOR.PANEL).find(SELECTOR.GRAPH).data(\n            'responseTitle',\n            M.util.get_string(response.header, 'local_edwiserreports')\n        );\n        data.responseTitle = M.util.get_string(response.header, 'local_edwiserreports');\n        data.tooltip = {\n            enabled: false\n        };\n        data.chart.animations = {\n            enabled: false\n        };\n        data.chart.events = {\n            mounted: function() {\n                if (response.labels.length != 0) {\n                    $(SELECTOR.PANEL).find(SELECTOR.GRAPH).find('.apexcharts-legend')\n                        .prepend(`<label class=\"graph-label w-100 text-center font-weight-700\">${$(SELECTOR.PANEL).find(SELECTOR.GRAPH).data('responseTitle')}</label>`);\n                }\n            }\n        };\n        data.chart.events.updated = data.chart.events.mounted;\n        renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n\n        switch (format) {\n            case 'pdfimage':\n                let graphElement = $(SELECTOR.PANEL).find(SELECTOR.GRAPH);\n                common.exportGraphPDF(chart, filter, graphElement.width(), graphElement.height(), filename);\n                break;\n            case 'jpeg':\n                common.exportGraphJPEG(chart, filter, filename);\n                break;\n            case 'png':\n                common.exportGraphPNG(chart, filter, filename);\n                break;\n            case 'svg':\n                common.exportGraphSVG(chart, filter, filename);\n                break;\n        }\n    }\n\n    return {\n        init: init,\n        download: download\n    };\n});\n"],"file":"grade.min.js"}
